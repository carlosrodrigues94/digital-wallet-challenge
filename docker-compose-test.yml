version: "3.7"
services:
  krakend_ce:
    #Watch mode is only to use on development
    image: devopsfaith/krakend:watch
    container_name: krakend_ce
    volumes:
      - ./config/krakend:/etc/krakend
    ports:
      - "1234:1234"
      - "8080:8080"
      - "8090:8090"
    depends_on:
      - rabbitmq_test
      - database_test
    command: ["run", "-d", "-c", "/etc/krakend/krakend.json"]
    networks:
      - "microservices_network"

  # Statement-consult-api
  statement_consult_api:
    image: node:18-alpine
    container_name: statement_consult_api
    volumes:
      - ./microservices/statement-consult:/app
    working_dir: /app
    ports:
      - "3000:3000"
    expose:
      - "3000"
    command: ["npm", "run", "start:dev"]
    depends_on:
      - rabbitmq_test
    environment:
      RABBITMQ_HOST: rabbitmq_test
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: test_user
      RABBITMQ_PASSWORD: test_password
      PORT: 3000
      REDIS_HOST: redis_test
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_password
      DB_NAME: statement_consult
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: database_test
      DB_PORT: 5432

    networks:
      - "microservices_network"

  # Statement-processor-api
  statement_processor_api:
    image: node:18-alpine
    container_name: statement_processor_api
    volumes:
      - ./microservices/statement-processor:/app
    working_dir: /app
    ports:
      - "3001:3001"
    expose:
      - "3001"
    command: ["npm", "run", "start:dev"]
    depends_on:
      - rabbitmq_test
      - database_test
    environment:
      RABBITMQ_HOST: rabbitmq_test
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: test_user
      RABBITMQ_PASSWORD: test_password
      PORT: 3001
      REDIS_HOST: redis_test
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_password
      DB_NAME: statement_processor
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: database_test
      DB_PORT: 5432
    networks:
      - "microservices_network"

  # Depost-api
  deposit_api:
    image: node:18-alpine
    container_name: deposit_api
    volumes:
      - ./microservices/deposit:/app
    ports:
      - "3002:3002"
    expose:
      - "3002"
    working_dir: /app
    command: ["npm", "run", "start:dev"]
    depends_on:
      - rabbitmq_test
    environment:
      RABBITMQ_HOST: rabbitmq_test
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: test_user
      RABBITMQ_PASSWORD: test_password
      REDIS_HOST: redis_test
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_password
      PORT: 3002
      DB_NAME: deposit
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: database_test
      DB_PORT: 5432
    networks:
      microservices_network:
        aliases:
          - deposit_api

  # Withdraw-api
  withdraw_api:
    image: node:18-alpine
    container_name: withdraw_api
    volumes:
      - ./microservices/withdraw:/app
    working_dir: /app
    ports:
      - "3003:3003"
    expose:
      - "3003"
    command: ["npm", "run", "start:dev"]
    depends_on:
      - rabbitmq_test
    environment:
      RABBITMQ_HOST: rabbitmq_test
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: test_user
      RABBITMQ_PASSWORD: test_password
      REDIS_HOST: redis_test
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_password
      PORT: 3003
      DB_NAME: withdraw
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: database_test
      DB_PORT: 5432
    networks:
      - "microservices_network"

  # RabbitMQ
  rabbitmq_test:
    image: rabbitmq:3.8-management-alpine
    container_name: rabbitmq_test
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - ~/.docker-conf/rabbitmq_test/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq_test/log/:/var/log/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=test_user
      - RABBITMQ_DEFAULT_PASS=test_password
    networks:
      - microservices_network
    logging:
      driver: "none"

  # Redis
  redis_test:
    image: redis:6.2-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass "redis_password"
    environment:
      - REDIS_PASSWORD=redis_password
    networks:
      - microservices_network

    volumes:
      - testing_cache:/data

  # Postgres
  database_test:
    image: postgres:13-alpine
    container_name: database_test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    logging:
      driver: none
    volumes:
      - testing_data:/var/lib/postgresql/data
      - ./config/postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh

    ports:
      - "5432:5432"
    networks:
      - "microservices_network"

networks:
  microservices_network:
    driver: bridge

volumes:
  testing_data:
  testing_cache:
