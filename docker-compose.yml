version: "3.7"
services:
  krakend_ce:
    # Watch mode is only to use on development
    image: devopsfaith/krakend:watch
    volumes:
      - ./config/krakend:/etc/krakend
    ports:
      - "1234:1234"
      - "8080:8080"
      - "8090:8090"
    command: ["run", "-d", "-c", "/etc/krakend/krakend.json"]
    networks:
      - "microservices_network"

  # Statement-consult-api
  statement_consult_api:
    image: node:18-alpine
    container_name: statement_consult_api
    volumes:
      - ./microservices/statement-consult:/app
    working_dir: /app
    command: ["npm", "run", "start:dev"]
    depends_on:
      - krakend_ce
      - rabbitmq
    environment:
      - PORT=3000
    networks:
      - "microservices_network"

  # Statement-processor-api
  statement_processor_api:
    image: node:18-alpine
    container_name: statement_processor_api
    volumes:
      - ./microservices/statement-processor:/app
    working_dir: /app
    command: ["npm", "run", "start:dev"]
    depends_on:
      - krakend_ce
      - rabbitmq
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=admin
      - RABBITMQ_PASSWORD=admin
      - PORT=3001
    networks:
      - "microservices_network"

  # Depost-api
  deposit_api:
    image: node:18-alpine
    container_name: deposit_api
    volumes:
      - ./microservices/deposit:/app
    working_dir: /app
    command: ["npm", "run", "start:dev"]
    depends_on:
      - krakend_ce
      - rabbitmq
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=admin
      - RABBITMQ_PASSWORD=admin
      - PORT=3002
    networks:
      - "microservices_network"

  # Withdrawal-api
  withdrawal_api:
    image: node:18-alpine
    container_name: withdrawal_api
    volumes:
      - ./microservices/withdrawal:/app
    working_dir: /app
    command: ["npm", "run", "start:dev"]
    depends_on:
      - krakend_ce
      - rabbitmq
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=admin
      - RABBITMQ_PASSWORD=admin
      - PORT=3003
    networks:
      - "microservices_network"

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: "rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - microservices_network

  # Postgres
  database:
    image: postgres:13-alpine
    container_name: database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    # volumes:
    #   - ./config/docker/postgres:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - "microservices_network"

networks:
  microservices_network:
    driver: bridge

x-include:
  - ./config/docker/statement-service.yml
